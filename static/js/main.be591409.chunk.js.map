{"version":3,"sources":["language/language.tsx","App.reducer.tsx","App.actions.tsx","components/UserList/User/like.svg","components/UserList/User/User.styled.tsx","components/UserList/User/User.component.tsx","components/UserList/UserList.styled.tsx","components/UserList/UserList.component.tsx","components/FilterBlock/FilterBlock.styled.tsx","components/FilterBlock/FilterBlock.Component.tsx","App.tsx","backend/httpGet.tsx","reportWebVitals.js","index.js"],"names":["russianLang","label","sortLabel","viewLabel","buttonsSort","buttonID","buttonAge","buttonName","buttonDirectionUp","buttonDirectionDown","buttonsView","buttonTable","buttonPreview","otherElements","searchPlaceholder","ageUser","englishLang","LanguageContext","React","createContext","initialState","users","filteredUsers","filter","sortBy","direction","searchedWord","view","language","reducer","state","action","type","console","log","userList","newState","map","user","id","newFilter","length","sortedFilteredUsers","sort","a","b","name","toLowerCase","includes","newView","lang","setFilter","setView","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","d","stroke","strokeWidth","SvgLike","_ref","svgRef","title","titleId","props","viewBox","xmlns","ref","ForwardRef","UserRow","styled","div","LeftRowBlock","hr","CenterRowBlock","RightRowBlock","UserPreviewContainer","isContainVideo","UserPreviewLeftBlock","parentWidth","UserPreviewRightBlock","UserPreviewHeaderBlock","UserPreviewBodyBlock","User","display","userData","onlike","postContainerRef","useRef","useContext","onLike","favourite","className","src","image","alt","age","phone","fill","width","height","onClick","video","current","offsetWidth","phrase","controls","StyledUserList","UserList","data","indx","FilterContainer","FilterLeftSubContainer","FilterRightSubContainer","Label","FilterButtonBlock","FilterButton","checked","FilterSearchBlock","FilterBlock","initFilter","initView","onChangeFilter","onChangeView","onSearchChange","onLangChange","useState","inputValue","setInputValue","timerHandler","value","onChange","placeholder","autoFocus","e","clearTimeout","currentTarget","pendingValue","setTimeout","htmlFor","App","useReducer","dispatch","sendToServer","param","url","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","onload","readyState","status","response","Error","onerror","send","httpGet","then","res","JSON","parse","error","catch","err","useEffect","startProject","Provider","basename","process","exact","path","render","to","component","useParams","history","useHistory","window","updatedfilter","push","updatedView","updatedUser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be591409.chunk.js","sourcesContent":["import React from 'react';\nimport {ILanguage} from './language.type';\n\nexport const russianLang:ILanguage={\n    label:{\n        sortLabel: 'Сортировать по...',\n        viewLabel: 'Отобразить в виде...',\n    },\n    buttonsSort:{\n        buttonID:'ID',\n        buttonAge:'Возрасту',\n        buttonName:'Имени',\n        buttonDirectionUp:'По возрастанию',\n        buttonDirectionDown:'По убыванию'\n    },\n    buttonsView:{\n        buttonTable:'Таблицы',\n        buttonPreview:'Предпросмотра'\n    },\n    otherElements:{\n        searchPlaceholder:'Поиск...',\n        ageUser:'лет'\n    }\n}\n\nexport const englishLang:ILanguage={\n    label:{\n        sortLabel: 'Sort by...',\n        viewLabel: 'View on...',\n    },\n    buttonsSort:{\n        buttonID:'ID',\n        buttonAge:'Age',\n        buttonName:'Name',\n        buttonDirectionUp:'Ascending',\n        buttonDirectionDown:'Descending'\n    },\n    buttonsView:{\n        buttonTable:'Table',\n        buttonPreview:'Preview'\n    },\n    otherElements:{\n        searchPlaceholder:'Search...',\n        ageUser:'years'\n    }\n}\n\nconst LanguageContext = React.createContext(russianLang)\nexport default LanguageContext","/* tslint:disable */\nimport {\n  IAppState,\n  IFilter,\n  IFullDataUser,\n  IGetUsersAction,\n  ISetFilterAction,\n  ISetLanguageAction,\n  ISetLikeAction,\n  ISetViewAction,\n  IView\n} from \"./App.types\";\n\nconst defaultUser:IFullDataUser[]= [{\n  \"id\": 0,\n  \"favourite\": false,\n  \"name\": \"Gilbert Morton\",\n  \"age\": 30,\n  \"phone\": \"(369) 432-9206\",\n  \"image\": \"sheep\",\n  \"phrase\": \"Japman somam mes lizmasapa om zefopi ki wa ogju mofrajnir denba uc famoso opeipu woul.\",\n  \"video\": \"shoe\"\n}];\n\nconst defaultFilter: IFilter={\n  sortBy: 'id',\n  direction: 'up',\n  searchedWord: ''\n};\n\nconst defaultView: IView={\n  view: 'table'\n}\n\n\nexport type IAppActions =\n  IGetUsersAction\n| ISetLikeAction\n| ISetFilterAction\n| ISetViewAction\n| ISetLanguageAction;\n\nconst initialState: IAppState = {\n  users: defaultUser,\n  filteredUsers: [],\n  filter: defaultFilter,\n  view: defaultView,\n  language: 'Russian'\n};\n\n\nconst reducer = (state: IAppState, action: IAppActions) => {\n  switch (action.type) {\n    case 'getUserList':{\n      console.log(\"saving users to reducer\");\n      return{\n        ...state,\n        users: action.userList,\n        filteredUsers: action.userList\n      }\n    }\n    case 'setLike':{\n      var newState = state.filteredUsers.map(user=>user.id===action.user.id? action.user: user)\n      return{\n        ...state,\n        filteredUsers:newState\n      }\n    }\n    case 'setFilter':{\n      console.log(action.newFilter);\n      if(action.newFilter.searchedWord.length<1){\n        var sortedFilteredUsers = state.users.sort((a,b)=>{\n          if(a[action.newFilter.sortBy]<b[action.newFilter.sortBy]) return action.newFilter.direction=='up'?-1: 1;\n          if(a[action.newFilter.sortBy]>b[action.newFilter.sortBy]) return action.newFilter.direction=='up'? 1: -1;\n          return 0\n        })\n      }\n      else{\n        var sortedFilteredUsers = state.users\n          .filter(user=> user.name.toLowerCase().includes(action.newFilter.searchedWord.toLowerCase()))\n          .sort((a,b)=>{\n            if(a[action.newFilter.sortBy]<b[action.newFilter.sortBy]) return action.newFilter.direction=='up'?-1: 1;\n            if(a[action.newFilter.sortBy]>b[action.newFilter.sortBy]) return action.newFilter.direction=='up'? 1: -1;\n            return 0\n          })\n      }\n      return{\n        ...state,\n        filteredUsers: sortedFilteredUsers,\n        filter: action.newFilter\n      }\n    }\n    case 'setView':{\n      console.log(action.newView)\n      return{\n        ...state,\n        view: action.newView\n      }\n    }\n    case 'setLang':{\n      return{\n        ...state,\n        language: action.lang\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport { initialState, reducer };\n","/* tslint:disable */\nimport {\n  IFullDataUser,\n  IGetUsersAction,\n  ISetLikeAction,\n  ISetFilterAction,\n  ISetViewAction,\n  IFilter,\n  IView,\n  ISetLanguageAction,\n} from \"./App.types\";\n\nconst saveList = (users: IFullDataUser[]):IGetUsersAction=>({\n  type: 'getUserList',\n  userList: users\n});\n\nconst setLike = (user: IFullDataUser):ISetLikeAction=>({\n  type: 'setLike',\n  user\n});\n\nconst setFilter = (newFilter: IFilter):ISetFilterAction=>({\n  type:'setFilter',\n  newFilter\n});\n\nconst setView = (newView: IView):ISetViewAction=>({\n  type:'setView',\n  newView\n});\n\nconst setLanguage = (lang: 'English'|'Russian'):ISetLanguageAction=>({\n  type: 'setLang',\n  lang\n})\n\nexport { \n  saveList,\n  setLike,\n  setFilter,\n  setView,\n  setLanguage\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m471.382812 44.578125c-26.503906-28.746094-62.871093-44.578125-102.410156-44.578125-29.554687 0-56.621094 9.34375-80.449218 27.769531-12.023438 9.300781-22.917969 20.679688-32.523438 33.960938-9.601562-13.277344-20.5-24.660157-32.527344-33.960938-23.824218-18.425781-50.890625-27.769531-80.445312-27.769531-39.539063 0-75.910156 15.832031-102.414063 44.578125-26.1875 28.410156-40.613281 67.222656-40.613281 109.292969 0 43.300781 16.136719 82.9375 50.78125 124.742187 30.992188 37.394531 75.535156 75.355469 127.117188 119.3125 17.613281 15.011719 37.578124 32.027344 58.308593 50.152344 5.476563 4.796875 12.503907 7.4375 19.792969 7.4375 7.285156 0 14.316406-2.640625 19.785156-7.429687 20.730469-18.128907 40.707032-35.152344 58.328125-50.171876 51.574219-43.949218 96.117188-81.90625 127.109375-119.304687 34.644532-41.800781 50.777344-81.4375 50.777344-124.742187 0-42.066407-14.425781-80.878907-40.617188-109.289063zm0 0\",\n  stroke: \"black\",\n  strokeWidth: 10\n});\n\nfunction SvgLike(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 -28 512.00002 512\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLike);\nexport default __webpack_public_path__ + \"static/media/like.d9049b2d.svg\";\nexport { ForwardRef as ReactComponent };","import styled from '@emotion/styled'\n\nexport const UserRow = styled.div`\n    display: inline-flex;\n    width: 99%;\n    background: white;\n    margin: 1px auto;\n    height: fit-content;\n    border-radius: 5px;\n    opacity:0;\n    transition: 0.5s;\n    animation: show 1s 1;\n    animation-fill-mode: forwards;\n    animation-delay: 1s;\n`;\n\n\n\nexport const Delimeter = styled.hr`\n    border: none;\n    color: grey;\n    background-color: grey;\n    height: 1px;\n    margin: 1px 15px 1px 15px;\n`;\n\nexport const LeftRowBlock = styled.div`\n    display: inline-flex;\n    width: 200px;\n    margin: 10px auto;\n\n    .avatar{\n        width: 30px;\n        height: 30px;\n        border-radius: 15px;\n        background: grey;\n    }\n    .name{\n        margin: auto 5px;\n    }\n`;\n\nexport const CenterRowBlock = styled.div`\n    margin: auto;\n`;\n\nexport const RightRowBlock = styled.div`\n    display: inline-flex;\n    width: 170px;\n    margin: auto;\n\n    .phone{\n        width: 150px;\n    }\n    .rate{\n        margin: auto 5px;\n        height: min-content;\n    }\n`;\n\nexport const UserPreviewContainer = styled.div<{isContainVideo:boolean}>`\n    margin: 5px auto;\n    display: flex;\n    flex-flow: wrap;\n    border: 1px solid grey;\n    border-radius: 5px;\n    min-width: 290px;\n    max-width: ${props => props.isContainVideo? '95%': '45%'};\n    box-shadow: 2px 3px 4px indigo;\n    background: white;\n`;\n\nexport const UserPreviewLeftBlock = styled.div<{parentWidth:any}>`\n    display: block;\n    width: ${props => props.parentWidth<470? '95%': '250px'};\n`;\n\nexport const UserPreviewRightBlock = styled.div<{parentWidth:any}>`\n    display: block;\n    width: ${props => props.parentWidth<470? '95%': '250px'};\n    margin: auto 5px auto auto;\n    height: auto;\n\n    .videoBlock{\n        width: 100%;\n    }\n`;\n\nexport const UserPreviewHeaderBlock = styled.div`\n    display: flex;\n    width: initial;\n    margin: 10px 10px;\n\n    .avatar{\n        width: 40px;\n        height: 40px;\n        border-radius: 15px;\n        background: grey;\n    }\n    .name{\n        margin: auto 20px;\n    }\n    .rate{\n        margin: auto 5px auto auto;\n        height: min-content;\n    }\n`;\n\nexport const UserPreviewBodyBlock = styled.div`\n    margin: 0px 10px;\n`;","import React, { useContext, useRef } from 'react'\nimport { IFullDataUser, IView } from '../../../App.types';\n\nimport { ILanguage } from '../../../language/language.type';\nimport LanguageContext from '../../../language/language';\n\nimport {ReactComponent as LikeIcon} from './like.svg';\n\nimport {\n    UserRow, \n    Delimeter,\n    LeftRowBlock, \n    CenterRowBlock, \n    RightRowBlock, \n    UserPreviewContainer,\n    UserPreviewLeftBlock,\n    UserPreviewRightBlock,\n    UserPreviewHeaderBlock,\n    UserPreviewBodyBlock\n} from './User.styled';\n\n\ninterface IUser{\n    display: IView;\n    userData: IFullDataUser;\n    onlike: (updatedUser:IFullDataUser)=>void;\n}\n\nconst User = ({display, userData, onlike}:IUser)=>{\n    const postContainerRef = useRef<HTMLDivElement>(null);\n    const language = useContext<ILanguage>(LanguageContext)\n\n    const onLike =(user: IFullDataUser)=>{\n        user.favourite= user.favourite== true? false: true;\n        onlike(user);\n    }\n\n    return display.view=='table'?(\n            <UserRow>\n                <LeftRowBlock>\n                    <div className='avatar'>\n                        <img src={'/assets/images/'+userData.image+'.svg'} alt='avatar'/>\n                    </div>\n                    <div className='name'>\n                        {userData.name}\n                    </div>\n                </LeftRowBlock>\n                <CenterRowBlock>{userData.age} {language.otherElements.ageUser}</CenterRowBlock>\n                <RightRowBlock>\n                    <div className='phone'>\n                    {userData.phone}\n                    </div>\n                    <div className='rate'>\n                        <LikeIcon\n                            fill={userData.favourite? 'indigo': 'transparent'}\n                            width='1em'\n                            height='1em'\n                            onClick={()=>onLike(userData)}\n                        />\n                    </div>\n                </RightRowBlock>\n            </UserRow>\n    ):(\n        <UserPreviewContainer ref={postContainerRef} isContainVideo={userData.video? true: false}>\n            <UserPreviewLeftBlock parentWidth={postContainerRef.current?.offsetWidth}>\n                <UserPreviewHeaderBlock>\n                    <div className='avatar'>\n                        <img src={'/assets/images/'+userData.image+'.svg'} alt='avatar'/>\n                    </div>\n                    <div className='name'>\n                        {userData.name}\n                    </div>\n                    <div className='rate'>\n                        <LikeIcon\n                            fill={userData.favourite? 'indigo': 'transparent'}\n                            width='1em'\n                            height='1em'\n                            onClick={()=>onLike(userData)}\n                        />\n                    </div>\n                </UserPreviewHeaderBlock>\n                <UserPreviewBodyBlock>\n                    <p>{userData.age} лет</p>\n                    <p>{userData.phone}</p>\n                    <p>{userData.phrase}</p>\n                </UserPreviewBodyBlock>\n            </UserPreviewLeftBlock>\n            \n            {userData.video?\n            (\n                <UserPreviewRightBlock parentWidth={postContainerRef.current?.offsetWidth}>\n                    <video className='videoBlock' controls src={'/assets/videos/'+userData.video+'.mp4'}/>\n                </UserPreviewRightBlock>\n            ):null\n            }\n        </UserPreviewContainer>\n    )\n}\n\nexport default User","import styled from '@emotion/styled'\n\nexport const StyledUserList = styled.div`\n    width: 60%;\n    min-width: 300px;\n    max-width: 820px;\n    height: auto;\n    max-height: 50vh;\n    display: flex;\n    flex-flow: wrap;\n    border: 1px solid grey;\n    border-radius: 5px;\n    box-shadow: inset 1px 1px 5px indigo;\n    margin: 20px auto;\n    overflow-y: scroll;\n    overflow-x: hidden;\n    ::-webkit-scrollbar{\n        width: 0px;\n    }\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n    background: gainsboro;\n\n    animation: show 1s 1;\n    animation-fill-mode: forwards;\n    animation-delay: 1s;\n`;\n","import React from 'react';\nimport User from './User';\nimport { IFullDataUser, IView } from '../../App.types'\n\nimport {StyledUserList} from './UserList.styled'\n\ninterface IUserList{\n    data: IFullDataUser[];\n    view: IView;\n    onLike: (updatedUser:IFullDataUser)=>void;\n}\n\nconst UserList = ({data, view, onLike}:IUserList)=>{\n    \n    return(\n        <StyledUserList>\n            {\n            data.map((user:IFullDataUser, indx: number)=>{\n                return (\n                    <User key={indx} display={view} userData={user} onlike={onLike}/>\n                )\n                })\n            }\n        </StyledUserList>\n    )\n}\n\nexport default UserList","import styled from '@emotion/styled';\n\nexport const FilterContainer = styled.div`\n    width: 60%;\n    min-width: 300px;\n    max-width: 820px;\n    height: min-content;\n    border: 1px solid grey;\n    border-radius: 5px;\n    display: flex;\n    flex-flow: wrap;\n    box-shadow: inset 1px 1px 5px grey;\n    margin: 20px auto;\n    overflow-y: scroll;\n    overflow-x: hidden;\n    ::-webkit-scrollbar{\n        width: 0px;\n    }\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n    background: gainsboro;\n`;\n\nexport const FilterLeftSubContainer=styled.div`\n    margin: auto;\n    display: block;\n    width: 250px;\n`;\n\nexport const FilterRightSubContainer=styled.div`\n    margin: auto;\n    display: block;\n    width: 250px;\n`;\n\nexport const Label = styled.div`\n    margin-left: 10px;\n`;\n\nexport const FilterButtonBlock = styled.div`\n    display: flex;\n    margin: 10px;\n    width: auto;\n`;\n\nexport const FilterButton = styled.label<{checked:boolean}>`\n    input[type=radio]{\n        position: absolute;\n        left: -9999px;\n    }\n    span {\n        display: block;\n        padding: 5px 15px;\n        border: 1px solid grey;\n        border-radius: 5px;\n        margin-right: 3px;\n        cursor: pointer;\n        border-color: ${props => props.checked? 'indigo': 'grey'};\n        background: ${props => props.checked? 'indigo': 'white'};\n    }\n\n    span:hover{\n        transition: 0.5s linear;\n        background: indigo;\n        border-color: red;\n    }\n\n`;\n\nexport const FilterSearchBlock = styled.div`\n    height: 30px;\n    margin-left: 10px;\n    display: inline-flex;\n\n    input[type=text]{\n        background: transparent;\n        width: 100px;\n        height: 30px;\n        border: none;\n        border-radius: 5px;\n        border-top: 1px solid grey;\n        border-bottom: 1px solid grey;\n    }\n\n    input:focus{\n        outline: none;\n        border: 1px solid indigo;\n        background: white;\n    }\n\n    .language{\n        margin-left: 5px;\n        display: inline-flex;\n        height: 25px;\n        width: min-content;\n\n        input{\n            margin: 0px 5px;\n        }\n        label{\n            margin: 0px 5px;\n        }\n    }\n`","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport { IFilter, IView } from '../../App.types';\nimport { ILanguage } from '../../language/language.type';\nimport LanguageContext from '../../language/language';\n\nimport {\n    Label, \n    FilterContainer, \n    FilterLeftSubContainer, \n    FilterRightSubContainer, \n    FilterButtonBlock, \n    FilterButton,\n    FilterSearchBlock\n} from './FilterBlock.styled'\n\ninterface IFilterBlock {\n    initFilter: IFilter;\n    initView: IView;\n    onChangeFilter:(filter: IFilter)=>void;\n    onChangeView: (view:IView)=> void;\n    onSearchChange: (e: string)=> void;\n    onLangChange: (e: boolean)=> void;\n}\n\nconst FilterBlock = ({\n    initFilter, \n    initView, \n    onChangeFilter, \n    onChangeView, \n    onSearchChange,\n    onLangChange\n}:IFilterBlock)=>{\n\n    const language = useContext<ILanguage>(LanguageContext)\n    console.log(initFilter);\n    console.log(initView);\n\n    const [inputValue, setInputValue] = useState(initFilter.searchedWord);\n\n    const timerHandler = useRef<any>();\n\n    return(\n        <FilterContainer>\n            <FilterLeftSubContainer>\n                <Label>{language.label.sortLabel}</Label>\n                <FilterButtonBlock>\n                    <FilterButton checked={initFilter.sortBy==='id'}>\n                        <span>{language.buttonsSort.buttonID}</span>\n                        <input type='radio' name='filter' value='id'\n                            onChange={()=>onChangeFilter({...initFilter, sortBy:'id'})}\n                        />\n                    </FilterButton>\n                    <FilterButton checked={initFilter.sortBy==='name'}>\n                        <span>{language.buttonsSort.buttonName}</span>\n                        <input type='radio' name='filter' value='name'\n                            onChange={()=>onChangeFilter({...initFilter, sortBy:'name'})}\n                        />\n                    </FilterButton>\n                    <FilterButton checked={initFilter.sortBy==='age'} >\n                        <span>{language.buttonsSort.buttonAge}</span>\n                        <input type='radio' name='filter' value='age'\n                            onChange={()=>onChangeFilter({...initFilter, sortBy: 'age'})}\n                        />\n                    </FilterButton>\n                </FilterButtonBlock>\n\n                <FilterButtonBlock>\n                    <FilterButton checked={initFilter.direction==='up'} >\n                        <span>{language.buttonsSort.buttonDirectionUp}</span>\n                        <input type='radio' name='filter' value='up'\n                            onChange={()=>onChangeFilter({...initFilter, direction:'up'})}\n                        />\n                    </FilterButton>\n                    <FilterButton checked={initFilter.direction==='down'} >\n                        <span>{language.buttonsSort.buttonDirectionDown}</span>\n                        <input type='radio' name='filter' value='down'\n                            onChange={()=>onChangeFilter({...initFilter, direction:'down'})}\n                        />\n                    </FilterButton>\n                </FilterButtonBlock>    \n            </FilterLeftSubContainer>\n            \n            <FilterRightSubContainer>\n                <Label>{language.label.viewLabel}</Label>\n                <FilterButtonBlock>\n                    <FilterButton checked={initView.view==='table'} >\n                        <span>{language.buttonsView.buttonTable}</span>\n                        <input type='radio' name='view' value='table'\n                            onChange={()=>onChangeView({...initView, view:'table'})}\n                        />\n                    </FilterButton>\n                    <FilterButton checked={initView.view==='preview'} >\n                        <span>{language.buttonsView.buttonPreview}</span>\n                        <input type='radio' name='view' value='preview'\n                            onChange={()=>onChangeView({...initView, view:'preview'})}\n                        />\n                    </FilterButton>\n                </FilterButtonBlock>\n                <FilterSearchBlock>\n                    <input type='text' placeholder={language.otherElements.searchPlaceholder}\n                        value={inputValue}  \n                        autoFocus\n                        onChange={(e)=>{\n                            clearTimeout(timerHandler.current);\n                            setInputValue(e.currentTarget.value);\n                            const pendingValue = e.currentTarget.value;\n                            timerHandler.current = setTimeout(()=>{\n                                onSearchChange(pendingValue)\n                            }, 1000)\n                            \n                        }}\n                    />\n                    <div className='language'>\n                    <input type='checkbox' \n                        name='lang' \n                        checked={language.otherElements.searchPlaceholder=='Search...'}\n                        onChange={(e)=>onLangChange(e.currentTarget.checked)}/>\n                    <label htmlFor='lang'>English</label>\n                    </div>\n                </FilterSearchBlock> \n            </FilterRightSubContainer>\n\n        </FilterContainer>\n        \n    )\n}\n\nexport default FilterBlock","/* tslint:disable */\nimport React, { useEffect, useReducer, useCallback } from \"react\";\nimport { Redirect, useHistory } from \"react-router\";\nimport { BrowserRouter, Switch, Route, useParams, Link } from \"react-router-dom\";\n//import { ThemeProvider } from \"emotion-theming\";\n//import lighten from \"./styles/themes/lighten\";\n//import darken from \"./styles/themes/darken\";\n\nimport LanguageContext, {englishLang, russianLang} from './language/language';\n\nimport { httpGet } from \"../src/backend/httpGet\";\n\nimport { initialState, reducer } from \"./App.reducer\";\nimport {\n  saveList,\n  setLike,\n  setFilter,\n  setView,\n  setLanguage\n} from \"./App.actions\";\nimport UserList from \"./components/UserList\";\nimport { IFilter, IFullDataUser, IView } from \"./App.types\";\nimport FilterBlock from \"./components/FilterBlock\";\n\nconst App = () => {\n  const [\n    { \n      filteredUsers,\n      filter,\n      view,\n      language\n    }, dispatch] = useReducer(\n    reducer,\n    initialState\n  );\n\n  const sendToServer = (\n    param: string,\n    url: string,\n  ) => {\n  httpGet(url)\n      .then(\n        (response: any) => {\n          const res = JSON.parse(response);\n          switch(param){\n            case 'users':{\n              dispatch(saveList(res))\n            }\n          }\n        },\n        error => console.error(error)\n      )\n      .catch(function(err) {\n        console.error(err);\n      });\n  };\n\n  async function startProject(){\n    sendToServer(\"users\",'/redux-test/assets/data.json');\n  }\n  useEffect(() => {\n    startProject();\n  }, [1]);\n\n  \n\n  const MainPage = () => {\n    let { sort, direction, display } = useParams<{sort:'id'|'name'|'age', direction:'up'|'down', display:'table'|'preview'}>();\n    let history = useHistory();\n    \n    window.onload =(e:Event)=>{\n      dispatch(setFilter({sortBy:sort, direction, searchedWord:''}));\n      dispatch(setView({view:display}))\n    }\n\n    const onLike = (updatedUser:IFullDataUser)=>{\n      console.log(updatedUser);\n      dispatch(setLike(updatedUser));\n    }\n\n    const onFilter=(updatedfilter: IFilter)=>{\n      history.push('/redux-test/'+updatedfilter.sortBy+'&'+updatedfilter.direction+'&'+view.view)\n      dispatch(setFilter(updatedfilter));\n    }\n\n    const onView = (updatedView:IView)=>{\n      history.push('/redux-test/'+filter.sortBy+'&'+filter.direction+'&'+updatedView.view)\n      dispatch(setView(updatedView));\n    }\n\n    const onSearch = (e: string)=> {\n      console.log(e);\n      dispatch(setFilter({...filter, searchedWord:e}));\n    }\n\n    return(\n      <div>\n        <FilterBlock \n          initFilter={filter} \n          initView={view} \n          onChangeFilter={onFilter} \n          onChangeView={onView}\n          onSearchChange={onSearch}\n          onLangChange={e=>dispatch(setLanguage(e? 'English':'Russian'))}\n          />\n        <UserList \n          data={filteredUsers} \n          view={view}\n          onLike={onLike}\n          />\n      </div>\n      \n    )\n  };\n\n  return (\n    <LanguageContext.Provider value={language=='Russian'? russianLang: englishLang}>\n      <BrowserRouter basename={`${process.env.PUBLIC_URL}/`}>\n        <Switch>\n          <Route exact={true} path='/' render={()=><Redirect to='/id&up&table'/>}/>\n          <Route path=\"/:sort&:direction&:display\" component={MainPage}/>\n        </Switch>\n      </BrowserRouter>\n    </LanguageContext.Provider>\n  )\n};\n\nexport default App;","/* tslint:disable */\n\nexport function httpGet(url: string) {\n  return new Promise(function(resolve, reject) {\n    console.log(\"Connecting to: \" + url);\n    let xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url, true);\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n    xhr.onload = function() {\n      if (xhr.readyState === 4) {\n        if (xhr.status >= 200 && xhr.status < 400) {\n          resolve(xhr.response);\n        } else {\n          reject(new Error(\"POST error\"));\n        }\n      }\n    };\n    xhr.onerror = function(){\n\n      reject(\"Network request Error\");\n    }\n    xhr.send();\n  });\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.tsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}